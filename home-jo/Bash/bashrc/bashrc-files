# vim: set ft=sh tw=0:

# -------------------
# File managing stuff
# -------------------
# sourced, ultimately, by ~/.bashrc
# (source ~/.bashrc if you've changed something here...)

# Joseph Harriott  http://momentary.eu/

# move up [n] directories
up(){
  local dir=""
  limit=$1
  for ((i=1 ; i <= limit ; i++))
    do
      dir=$dir/..
    done
  dir=$(echo $dir | sed 's/^\///')
  if [ -z "$dir" ]; then
    dir=..
  fi
  cd $dir
}

alias gpr='gprename &'
alias rpd='bash /mnt/SDSSDA240G/Dropbox/JH/IT_stack/onGitHub/rsync-portabledrives/rsync.sh'
alias ls='ls --color=auto'
alias pcm='pcmanfm & disown'
alias s="stat -c '%A %a %h %U %G %s %y %n'"
alias so="stat -c '%a %n'"
alias sm="stat -c '%y %n'"
shopt -s autocd dotglob extglob globstar nullglob

# Git
# ---
alias ga='git add'
alias gis='git status -u'
gic () {
    git commit -m "$1"
}

# locate directories:
# -------------------
locd () {
    locate $1 | xargs -I {} bash -c 'if [ -d "{}" ]; then echo {}; fi'
}

source /etc/profile.d/autojump.bash

# nnn
# ---

# cd on quit
n()
{
    # The default behaviour is to cd on quit (nnn checks if NNN_TMPFILE is set)
    # To cd on quit only on ^G, export NNN_TMPFILE after the call to nnn

    nnn "$@"
    export NNN_TMPFILE=${XDG_CONFIG_HOME:-$HOME/.config}/nnn/.lastd

    if [ -f $NNN_TMPFILE ]; then
            . $NNN_TMPFILE
            rm -f $NNN_TMPFILE > /dev/null
    fi
}

export NNN_BMS='n:~/.config/nnn'
export NNN_COPIER="/home/jo/.config/nnn/copier.sh"
export NNN_CONTEXT_COLORS="2136" # use a different color for each context
export NNN_PLUG='c:fzcd;o:fzy-open'
export NNN_TRASH=1 # trash (needs trash-cli) instead of delete

# time-sorted lists of files
# --------------------------

# find date-time sort Encrypted folder
fdtsEF () {
  eval "find $1* $printfDTsort"
}

# find date-time sort files of a certain type (filename extension)
fdtsExt () {
  if [ $1 ]; then
    dtsfile=dts-$1.txt
    echo "vim: nowrap tw=0:" > $dtsfile
    echo "" >> $dtsfile
    echo $PWD >> $dtsfile
    eval "find -iname \*.$1 $printfDTsort >> $dtsfile"
    echo "" >> $dtsfile
    if [ $1 = "tex" ] || [ $1 = "txt" ]; then
      sed -i "s| \.| $PWD|" $dtsfile
    fi
  else
    echo "^ need a file type (= filename extension)"
  fi
}

printfDTsort='-printf %TY-%Tm-%Td\ %TH:%TM\ %p\\n | sort'

# trash-cli
# ---------
alias tl='trash-list'
alias tre='trash-restore'

