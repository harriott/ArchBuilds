# muttrc-*  filetypes are set in  plugin/buffers.vim

# based on  /usr/share/mutt-wizard/mutt-wizard.muttrc
# general settings for neomutt

set mailcap_path = /usr/share/mutt-wizard/mailcap
set date_format="%y/%m/%d %I:%M%p"
set index_format="%2C %zs %?X?A& ? %D %-15.15F %s (%-4.4c)"
set sort = 'reverse-date'
set smtp_authenticators = 'gssapi:login'
set query_command = "abook --mutt-query '%s'"
set rfc2047_parameters = yes
set sleep_time = 0		# Pause 0 seconds for informational messages
set markers = no		# Disables the `+` displayed at line wraps
set mark_old = no		# Unread mail stay unread until read
set mime_forward = yes		# attachments are forwarded with mail
set wait_key = no		# mutt won't ask "press key to continue"
set fast_reply			# skip to compose when replying
set fcc_attach			# save attachments with the body
set forward_format = "Fwd: %s"	# format of subject when forwarding
set forward_quote		# include message in forwards
set reverse_name		# reply as whomever it was to
set include			# include message in replies
set mail_check=60 # to avoid lags using IMAP with some email providers (yahoo for example)
auto_view text/html		# automatically show html (mailcap uses w3m)
auto_view application/pgp-encrypted
alternative_order text/plain text/enriched text/html
bind index,pager g noop
bind index \Cf noop

set menu_scroll # smoother movement
unset confirmappend # don't ask of confirmation when moving emails

# Useful key bindings for the index
#  $ == sync changes
#  * or <End> > <last-entry> == jump to the last entry
#  ] > <half-down>
#  [ > <half-up>
#  ; tag-prefix == apply next function to tagged messages
#  = or <Home> -> <first-entry> == jump to the first entry
#  l == limit
#  T -> tag-pattern == tag messages matching a pattern
#   T > .* == tags all in a folder
#  U == undo deletion

# Useful key bindings for the browser
# c? == enter browser
# p == parent folder

# General rebindings
bind attach <return> view-mailcap
bind attach l view-mailcap
bind editor <space> noop
bind index D delete-message
bind index U undelete-message
bind index h noop
bind index <space> tag-entry
bind index,pager H view-raw-message
bind browser l select-entry
bind index,pager S sync-mailbox
bind index,pager R group-reply
bind index \031 previous-undeleted	# Mouse wheel
bind index \005 next-undeleted		# Mouse wheel
bind pager \031 previous-line		# Mouse wheel
bind pager \005 next-line		# Mouse wheel
bind editor <Tab> complete-query

# address book (from MW):
macro index,pager a "<enter-command>set my_pipe_decode=\$pipe_decode pipe_decode<return><pipe-message>abook --add-email<return><enter-command>set pipe_decode=\$my_pipe_decode; unset my_pipe_decode<return>" "add the sender address to abook"

# Notmuch:
# this hard to decipher MW command only works in the current folder (so need to define an folder containing all of the emails to allow full searching of each email account):
macro index \Cf "<enter-command>unset wait_key<enter><shell-escape>read -p 'Enter a search term to find with notmuch: ' x; echo \$x >~/.cache/mutt_terms<enter><limit>~i \"\`notmuch search --output=messages \$(cat ~/.cache/mutt_terms) | head -n 600 | perl -le '@a=<>;s/\^id:// for@a;$,=\"|\";print@a' | perl -le '@a=<>; chomp@a; s/\\+/\\\\+/ for@a;print@a' \`\"<enter>" "show only messages matching a notmuch pattern"
# reset limit to view all messages in the folder:
macro index \Cl "<limit>all\n" "show all messages (undo limit)"
# the following allows virtual folders to be populated with Notmuch queries:
set nm_default_uri = "notmuch:///home/jo/.local/share/mail/"
macro index,pager gq "<vfolder-from-query>" "go notmuch Query"

source $DROPBOX/$AVT661/home-jo/email/muttrc-MW-layout

