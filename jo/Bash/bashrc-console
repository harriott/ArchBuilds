# vim: fdm=expr ft=sh.shfold sw=2:

# sourced, ultimately, by ~/.bashrc
# (source ~/.bashrc if you've changed something here...)

# -----------------------------------------------------------
# These are more settings that can also be useful in Console.
# -----------------------------------------------------------

# Joseph Harriott - Thu 24 Sep 2020

#=> file manage
alias rs0='bash $onGH/rsync-portabledrives/rync-Dr0.sh'
alias rs1='bash $onGH/rsync-portabledrives/rync-Dr1.sh'

#==> Git
alias ga='git add'
alias gis='git status -u'
export BFG=$ITstack/CrossPlatform/bfg-1.13.0.jar
gic () {
    git commit -m "$1"
}

#==> quick-check my Encrypted directories
alias fe='fdtsEncryptedChanges'

fdtsEncryptedChanges () {
  if [ "$PWD" != ${Encrypted[0]} ]; then
    cd ${Encrypted[0]}
    pwd
  fi
  for i in ${!Encrypted[@]}; do
    if [ $i -gt 0 ]; then
      f7z="find . -iname \"${Encrypted[$i]}*.7z\" | sort | tail -1"
      ed7z=$(eval "$f7z")
      if [ $ed7z ]; then
        tput setaf 5
        eval "find . -iname \"${Encrypted[$i]}*.7z\" $printfDTsort"
        tput setaf 7
        eval "find -path \"./${Encrypted[$i]}*\" -newer $ed7z $printfDTsort"
      fi
    fi
  done
}

#==> Samokovarov's  jump
if [ -s "/usr/bin/jump" ]; then
    eval "$(jump shell)"  # makes further adjustments to  PROMPT_COMMAND
fi

#==> time-sorted lists of files - all
alias fa='fdtsAll'

fdtsAll () {
  eval "find * $printfDTsort"
  echo "$printfDTsort"
}

#==> time-sorted lists of files - by extension
alias fx='fdtsExt'

fdtsExt () {
  if [ $1 ]; then
    if [ $1 = "gitignore" ]; then
      search=.$1
    else
      search='\*.$1'
    fi
    dtsfile=dts-$1.txt
    eval "fdtsKS $search $dtsfile"
    [[ $1 = @(gitignore|pl|tex|txt) ]] && ctfp $dtsfile
  else
    echo "^ need a file type (= filename extension)"
  fi
}

#==> time-sorted lists of files - by keystring
alias fk=fdtsKeyString

fdtsKeyString () {
  if [ $1 ]; then
    dtsfile=dts-$1.txt
    search='\*$1\*'
    eval "fdtsKS $search $dtsfile"
  fi
}

#==> time-sorted lists of files - common functionality
ctfp () {
  # corrects to full path
  sed -i "s| \.| $PWD|" $1
}

export printfDTsort='-printf %TY-%Tm-%Td\ %TH:%TM\ %p\\n | sort'

fdtsKS () {
  echo "vim: nowrap tw=0:" > $2
  echo "" >> $2
  echo $PWD >> $2
  eval "find -iname \"$1\" $printfDTsort >> $2"
  echo "" >> $2
  echo "results are in $2"
} # $1 being the keystring

#==> time-sorted lists of files - in my Encrypted folder
# alias fe='fdtsEF'

fdtsEF () {
  eval "find $1* $printfDTsort"
}

#==> trash-cli
alias tl='trash-list'
alias tre='trash-restore'

#=> interface
# bigger command history
export HISTFILESIZE=10000
export HISTSIZE=1000

# a colorised (bold blue) prompt, with git support
source /usr/share/git/completion/git-prompt.sh
GIT_PS1_SHOWDIRTYSTATE=true
GIT_PS1_SHOWUNTRACKEDFILES=true
PS1='\[\e[1;34m\][\w$(__git_ps1 " (%s)")]\$\[\e[0m\] '

# command not found hook
source /usr/share/doc/pkgfile/command-not-found.bash

# for tmux
export EDITOR=nvim
export VISUAL=nvim

#=> my preferred npm global directory
export PATH="$HOME/.npm-global/bin:$PATH"

#=> System, for GnuPG
export GPG_TTY=$(tty)

