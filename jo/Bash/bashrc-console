# vim: set ft=sh tw=0:

# sourced, ultimately, by ~/.bashrc
# (source ~/.bashrc if you've changed something here...)

# These are more settings that can also be useful in Console.

# Joseph Harriott  http://momentary.eu/


# bigger command history
export HISTFILESIZE=10000
export HISTSIZE=1000

# a colorised (bold blue) prompt, with git support
source /usr/share/git/completion/git-prompt.sh
GIT_PS1_SHOWDIRTYSTATE=true
GIT_PS1_SHOWUNTRACKEDFILES=true
PS1='\[\e[1;34m\][\w$(__git_ps1 " (%s)")]\$\[\e[0m\] '

# command not found hook
source /usr/share/doc/pkgfile/command-not-found.bash

# my preferred npm global directory
export PATH="$HOME/.npm-global/bin:$PATH"

# Samokovarov's  jump
if [ -s "/usr/bin/jump" ]; then
    eval "$(jump shell)"  # makes further adjustments to  PROMPT_COMMAND
fi

# System, for GnuPG
export GPG_TTY=$(tty)

# for tmux
export EDITOR=nvim
export VISUAL=nvim


# Git
# ---
alias ga='git add'
alias gis='git status -u'
gic () {
    git commit -m "$1"
}


# time-sorted lists of files
# --------------------------

# find all types of files
fdtsAll () {
  eval "find * $printfDTsort"
}
alias fa='fdtsAll'

# find date-time sort - Encrypted folder
fdtsEF () {
  eval "find $1* $printfDTsort"
}
alias fe='fdtsEF'

# find date-time sort - files of a certain type (filename extension)
fdtsExt () {
  if [ $1 ]; then
    dtsfile=dts-$1.txt
    echo "vim: nowrap tw=0:" > $dtsfile
    echo "" >> $dtsfile
    echo $PWD >> $dtsfile
    eval "find -iname \*.$1 $printfDTsort >> $dtsfile"
    echo "" >> $dtsfile
    if [ $1 = "tex" ] || [ $1 = "txt" ]; then
      sed -i "s| \.| $PWD|" $dtsfile
    fi
    echo "results are in $dtsfile"
  else
    echo "^ need a file type (= filename extension)"
  fi
}
alias fx='fdtsExt'

printfDTsort='-printf %TY-%Tm-%Td\ %TH:%TM\ %p\\n | sort'


# trash-cli
# ---------
alias tl='trash-list'
alias tre='trash-restore'

