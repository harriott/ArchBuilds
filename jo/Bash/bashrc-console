# vim: set ft=sh sw=2 tw=0:

# sourced, ultimately, by ~/.bashrc
# (source ~/.bashrc if you've changed something here...)

# These are more settings that can also be useful in Console.

# Joseph Harriott  http://momentary.eu/


# bigger command history
export HISTFILESIZE=10000
export HISTSIZE=1000

# a colorised (bold blue) prompt, with git support
source /usr/share/git/completion/git-prompt.sh
GIT_PS1_SHOWDIRTYSTATE=true
GIT_PS1_SHOWUNTRACKEDFILES=true
PS1='\[\e[1;34m\][\w$(__git_ps1 " (%s)")]\$\[\e[0m\] '

# command not found hook
source /usr/share/doc/pkgfile/command-not-found.bash

# my preferred npm global directory
export PATH="$HOME/.npm-global/bin:$PATH"

# System, for GnuPG
export GPG_TTY=$(tty)

# for tmux
export EDITOR=nvim
export VISUAL=nvim


# -----------
# file manage
# -----------

alias rs0='bash $onGH/rsync-portabledrives/rync-Dr0.sh'
alias rs1='bash $onGH/rsync-portabledrives/rync-Dr1.sh'

# Samokovarov's  jump
if [ -s "/usr/bin/jump" ]; then
    eval "$(jump shell)"  # makes further adjustments to  PROMPT_COMMAND
fi

# Git
# ---
alias ga='git add'
alias gis='git status -u'
export BFG=$ITstack/CrossPlatform/bfg-1.13.0.jar
gic () {
    git commit -m "$1"
}


# time-sorted lists of files
# --------------------------

# all types of files
fdtsAll () {
  eval "find * $printfDTsort"
echo "$printfDTsort"
}
alias fa='fdtsAll'

# common functionality
fdtsKS () {
  echo "vim: nowrap tw=0:" > $2
  echo "" >> $2
  echo $PWD >> $2
  eval "find -iname \"$1\" $printfDTsort >> $2"
  echo "" >> $2
  echo "results are in $2"
}
ctfp () {
  # corrects to full path
  sed -i "s| \.| $PWD|" $1
}

# files of a certain type (filename extension)
fdtsExt () {
  if [ $1 ]; then
    if [ $1 = "gitignore" ]; then
      search=.$1
    else
      search='\*.$1'
    fi
    dtsfile=dts-$1.txt
    eval "fdtsKS $search $dtsfile"
    [[ $1 = @(gitignore|pl|tex|txt) ]] && ctfp $dtsfile
  else
    echo "^ need a file type (= filename extension)"
  fi
}
alias fx='fdtsExt'

# files with keystring in name
fdtsKeyString () {
  if [ $1 ]; then
    dtsfile=dts-$1.txt
    search='\*$1\*'
    eval "fdtsKS $search $dtsfile"
  fi
}
alias fk=fdtsKeyString

# in my Encrypted folder
fdtsEF () {
  eval "find $1* $printfDTsort"
}
alias fe='fdtsEF'

export printfDTsort='-printf %TY-%Tm-%Td\ %TH:%TM\ %p\\n | sort'


# trash-cli
# ---------
alias tl='trash-list'
alias tre='trash-restore'

